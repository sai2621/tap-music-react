{"version":3,"sources":["sounds/kick-tape.wav","sounds/clap-tape.wav","sounds/hihat-808.wav","samples/piano/C4.mp3","svg/play.svg","svg/stop.svg","sounds/kick-808.wav","sounds/kick-electro01.wav","sounds/kick-classic.wav","sounds/clap-fat.wav","sounds/clap-crushed.wav","sounds/clap-808.wav","sounds/hihat-acoustic01.wav","sounds/hihat-electro.wav","samples/guitar-electric/C4.mp3","samples/cello/C4.mp3","components/Track.js","components/Play.js","components/TrackSelect.js","components/Sequencer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Track","_this","this","react_default","a","createElement","className","onClick","props","muteHandler","trackNumber","width","height","viewBox","fill","xmlns","style","margin","cx","cy","r","mute","color","stroke","strokeWidth","transition","values","map","value","index","key","transform","activeTrack","activateSound","Component","Play","_ref","activateSong","trackActive","src","stop","alt","play","TrackSelect","react","e","selectTune","target","tone","toneName","Sequencer","state","bpm","timer","synthActive","sounds","name","Tone","Player","kicktape","toMaster","volume","id","tones","kick808","kickelectro","kickclassic","claptape","clap808","clapfat","clapcrushed","hihat808","hihatacoustic1","hihatelectro","synth","Sampler","C4","pianoC4","release","notes","A","W","S","E","D","R","F","T","G","Y","H","U","J","I","Z","X","C","V","B","N","M","synthSounds","guitarC4","celloC4","currentSynth","activateSoundHandler","sound","Object","toConsumableArray","setState","muteTrackHandler","changeBpmHandler","console","log","Transport","selectTuneHandler","tune","activateSongHandler","start","synthPlayHandler","toUpperCase","repeat","triggerAttack","releaseSynthHandler","triggerRelease","changeSynthHandler","objectSpread","length","_this2","scheduleRepeat","time","forEach","loaded","_this3","onKeyDown","onKeyUp","tabIndex","position","Track_Track","TrackSelect_TrackSelect","type","min","max","onChange","preventDefault","App","Sequencer_Sequencer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uQCEnBC,mLACV,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OACEE,QAAS,kBAAMN,EAAKO,MAAMC,YAAYR,EAAKO,MAAME,cACjDC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACNC,MAAO,CAAEC,OAAQ,aAEjBd,EAAAC,EAAAC,cAAA,UACEa,GAAG,KACHC,GAAG,KACHC,EAAE,OACFN,KAAMZ,KAAKM,MAAMa,KAAO,QAAUnB,KAAKM,MAAMc,MAC7CC,OAAQrB,KAAKM,MAAMc,MACnBE,YAAY,IACZR,MAAO,CAAES,WAAY,qBAI3BtB,EAAAC,EAAAC,cAAA,WACGH,KAAKM,MAAMkB,OAAOC,IAAI,SAACC,EAAOC,GAAR,OACrB1B,EAAAC,EAAAC,cAAA,OACEC,UAAU,YACVwB,IAAKD,EACLlB,MAAM,MACNC,OAAO,MACPI,MAAO,CACLF,KAAMc,EAAQ3B,EAAKO,MAAMc,MAAQ,mBACjCS,UACEF,EAAQ,IAAM5B,EAAKO,MAAMwB,YACrB,cACA,YACNR,YAAa,MACbP,OAAQ,OACRQ,WAAY,iBAEdlB,QAAS,kBACPN,EAAKO,MAAMyB,cAAcJ,EAAO5B,EAAKO,MAAME,eAG7CP,EAAAC,EAAAC,cAAA,QAAMM,MAAM,MAAMC,OAAO,oBA9CJsB,+CCEpBC,EAAA,SAAAC,GAAmC,IAAhCC,EAAgCD,EAAhCC,aAAcC,EAAkBF,EAAlBE,YAC9B,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaC,QAAS8B,GACrCC,EACCnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOiC,IAAKC,IAAMC,IAAI,KAErCtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOiC,IAAKG,IAAMD,IAAI,YCT1BE,mLACV,IAAA1C,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAACuC,EAAA,SAAD,KACEzC,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACVC,QAAS,SAAAsC,GAAC,OACR5C,EAAKO,MAAMsC,WAAWD,EAAEE,OAAOnB,MAAO3B,EAAKO,MAAME,eAGlDR,KAAKM,MAAMwC,KAAKrB,IAAI,SAACqB,EAAMnB,GAAP,OACnB1B,EAAAC,EAAAC,cAAA,UAAQuB,MAAOoB,EAAMlB,IAAKD,GACvB5B,EAAKO,MAAMyC,SAASpB,eAZMK,yPCkBpBgB,6MACnBC,MAAQ,CACNC,IAAK,IACLC,MAAO,EACPf,aAAa,EACbgB,aAAa,EACbC,OAAQ,CACN,CACEC,KAAM,IAAIC,IAAKC,OAAOC,KAAUC,WAChCC,OAAQ,IACRxC,MAAM,EACNK,OAAQ,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC1DoC,GAAI,SACJxC,MAAO,UACPyC,MAAO,CAACJ,IAAUK,IAASC,IAAaC,KACxCjB,SAAU,CAAC,YAAa,WAAY,eAAgB,iBAEtD,CACEO,KAAM,IAAIC,IAAKC,OAAOS,KAAUP,WAChCC,OAAQ,IACRxC,MAAM,EACNK,OAAQ,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC1DoC,GAAI,QACJxC,MAAO,UACPyC,MAAO,CAACI,IAAUC,IAASC,IAASC,KACpCrB,SAAU,CAAC,YAAa,WAAY,WAAY,iBAElD,CACEO,KAAM,IAAIC,IAAKC,OAAOa,KAAUX,WAChCC,OAAQ,IACRxC,MAAM,EACNK,OAAQ,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC1DoC,GAAI,SACJxC,MAAO,UACPyC,MAAO,CAACQ,IAAUC,IAAgBC,KAClCxB,SAAU,CAAC,YAAa,iBAAkB,mBAG9CyB,MAAO,CACLlB,KAAM,IAAIC,IAAKkB,QACb,CACEC,GAAIC,KAEN,CAAEC,QAAS,IACXlB,WACFmB,MAAO,CACLC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,MAELC,YAAa,CAACxB,IAASyB,IAAUC,KACjCC,aAAc,MAIlBC,qBAAuB,SAACC,EAAOhG,GAC7B,IAAM6C,EAAMoD,OAAAC,EAAA,EAAAD,CAAO1G,EAAKkD,MAAMI,QAC9BA,EAAO7C,GAAagB,OAAOgF,IAAUnD,EAAO7C,GAAagB,OAAOgF,GAChEzG,EAAK4G,SAAS,CACZtD,OAAQA,OAIZuD,iBAAmB,SAAApG,GACjB,IAAM6C,EAAMoD,OAAAC,EAAA,EAAAD,CAAO1G,EAAKkD,MAAMI,QAC9BA,EAAO7C,GAAaW,MAAQkC,EAAO7C,GAAaW,KAChDpB,EAAK4G,SAAS,CACZtD,OAAQA,OAIZwD,iBAAmB,SAAAlE,GACjBmE,QAAQC,IAAIhH,EAAKkD,MAAMC,KACvBnD,EAAK4G,SAAS,CACZzD,IAAKP,EAAEE,OAAOnB,QAEhB6B,IAAKyD,UAAU9D,IAAIxB,MAAQ3B,EAAKkD,MAAMC,OAGxC+D,kBAAoB,SAACC,EAAM1G,GACzB,IAAM6C,EAAMoD,OAAAC,EAAA,EAAAD,CAAO1G,EAAKkD,MAAMI,QAC9BA,EAAO7C,GAAa8C,KAAO,IAAIC,IAAKC,OAAO0D,GAAMxD,WACjD3D,EAAK4G,SAAS,CACZtD,OAAQA,OAIZ8D,oBAAsB,WAEfpH,EAAKkD,MAAMb,YAGdmB,IAAKyD,UAAU1E,OAFfiB,IAAKyD,UAAUI,QAMjBrH,EAAK4G,SAAS,CACZvE,aAAcrC,EAAKkD,MAAMb,iBAI7BiF,iBAAmB,SAAA1E,GACjB,IAAM6D,EAAQzG,EAAKkD,MAAMuB,MAAMK,MAAMlC,EAAEf,IAAI0F,eACvC3E,EAAE4E,QAGJxH,EAAKkD,MAAMuB,MAAMlB,KAAKkE,cAAchB,MAIxCiB,oBAAsB,WACpB1H,EAAKkD,MAAMuB,MAAMlB,KAAKoE,oBAGxBC,mBAAqB,WACnB,IAAMnD,EAAKiC,OAAAmB,EAAA,EAAAnB,CAAA,GAAQ1G,EAAKkD,MAAMuB,OAC1BA,EAAM8B,aAAe9B,EAAM2B,YAAY0B,OAAS,EAClDrD,EAAM8B,eAEN9B,EAAM8B,aAAe,EAEvB9B,EAAMlB,KAAO,IAAIC,IAAKkB,QACpB,CACEC,GAAIF,EAAM2B,YAAY3B,EAAM8B,eAE9B,CAAE1B,QAAS,IACXlB,WACF3D,EAAK4G,SAAS,CACZnC,MAAOA,wFAIS,IAAAsD,EAAA9H,KAElBuD,IAAKyD,UAAU9D,IAAIxB,MAAQ1B,KAAKiD,MAAMC,IAEtCK,IAAKyD,UAAUe,eAAe,SAAAC,GAC5BlB,QAAQC,IAAIe,EAAK7E,MAAMI,OAAO,GAAG7B,QACjCsF,QAAQC,IAAIe,EAAK7E,MAAME,OACvB2E,EAAK7E,MAAMI,OAAO4E,QAAQ,SAACzB,EAAO7E,GAE9B6E,EAAMhF,OAAOsG,EAAK7E,MAAME,SACvBqD,EAAMrF,MACPqF,EAAMlD,KAAK4E,QAEX1B,EAAMlD,KAAK8D,UAKfU,EAAKnB,SAAS,CACZxD,OAAQ2E,EAAK7E,MAAME,MAAQ,GAAK,KAEjC,uCAGI,IAAAgF,EAAAnI,KACCqD,EAAWrD,KAAKiD,MAAhBI,OAER,OACEpD,EAAAC,EAAAC,cAAA,OACEiI,UAAWpI,KAAKqH,iBAChBgB,QAASrI,KAAKyH,oBACda,SAAS,IACTxH,MAAO,CAAEyH,SAAU,WAAY9H,MAAO,OAAQC,OAAQ,SAEtDT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,aACCiD,EAAO5B,IAAI,SAAC+E,EAAO7E,GAAR,OACV1B,EAAAC,EAAAC,cAAA,OAAKyB,IAAK4E,EAAM5C,GAAIxD,UAAU,cAC5BH,EAAAC,EAAAC,cAACqI,EAAD,CACEhH,OAAQgF,EAAMhF,OACdO,cAAeoG,EAAK5B,qBACpB/F,YAAamB,EACbG,YAAaqG,EAAKlF,MAAME,MACxB/B,MAAOoF,EAAMpF,MACbD,KAAMqF,EAAMrF,KACZZ,YAAa4H,EAAKvB,mBAEpB3G,EAAAC,EAAAC,cAACsI,EAAD,CACE3F,KAAM0D,EAAM3C,MACZjB,WAAYuF,EAAKlB,kBACjBzG,YAAamB,EACboB,SAAUyD,EAAMzD,cAItB9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGE,QAASL,KAAK2H,oBAAjB,UAEF1H,EAAAC,EAAAC,cAAC8B,EAAD,CACEE,aAAcnC,KAAKmH,oBACnB/E,YAAapC,KAAKiD,MAAMb,cAE1BnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,SACEuI,KAAK,QACLC,IAAI,IACJC,IAAI,MACJlH,MAAO1B,KAAKiD,MAAMC,IAClB2F,SAAU7I,KAAK6G,iBACfxG,QAAS,SAAAsC,GAAC,OAAIA,EAAEmG,oBAElB7I,EAAAC,EAAAC,cAAA,SAAIH,KAAKiD,MAAMC,eA9NYlB,aCNxB+G,mLARX,OACE9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6I,EAAD,cAJUhH,aCMEiH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOtJ,EAAAC,EAAAC,cAACqJ,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2fdd7c69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kick-tape.e13e79b4.wav\";","module.exports = __webpack_public_path__ + \"static/media/clap-tape.82a6ad65.wav\";","module.exports = __webpack_public_path__ + \"static/media/hihat-808.46ba2a48.wav\";","module.exports = __webpack_public_path__ + \"static/media/C4.9edd60fe.mp3\";","module.exports = __webpack_public_path__ + \"static/media/play.b7fca183.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop.1f2bf351.svg\";","module.exports = __webpack_public_path__ + \"static/media/kick-808.550be808.wav\";","module.exports = __webpack_public_path__ + \"static/media/kick-electro01.6f0a525e.wav\";","module.exports = __webpack_public_path__ + \"static/media/kick-classic.07163268.wav\";","module.exports = __webpack_public_path__ + \"static/media/clap-fat.98b1a6e1.wav\";","module.exports = __webpack_public_path__ + \"static/media/clap-crushed.5c87ec3f.wav\";","module.exports = __webpack_public_path__ + \"static/media/clap-808.39f9581a.wav\";","module.exports = __webpack_public_path__ + \"static/media/hihat-acoustic01.f0989e24.wav\";","module.exports = __webpack_public_path__ + \"static/media/hihat-electro.97009a17.wav\";","module.exports = __webpack_public_path__ + \"static/media/C4.0dff397f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/C4.b253a180.mp3\";","import React, { Component } from \"react\";\n\nexport default class Track extends Component {\n  render() {\n    return (\n      <div className=\"track-container\">\n        <div className=\"track\">\n          <svg\n            onClick={() => this.props.muteHandler(this.props.trackNumber)}\n            width=\"70\"\n            height=\"70\"\n            viewBox=\"0 0 70 70\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            style={{ margin: \"0px 30px\" }}\n          >\n            <circle\n              cx=\"35\"\n              cy=\"35\"\n              r=\"32.5\"\n              fill={this.props.mute ? \"white\" : this.props.color}\n              stroke={this.props.color}\n              strokeWidth=\"5\"\n              style={{ transition: \"all 0.5s ease\" }}\n            />\n          </svg>\n        </div>\n        <div>\n          {this.props.values.map((value, index) => (\n            <svg\n              className=\"track-svg\"\n              key={index}\n              width=\"100\"\n              height=\"100\"\n              style={{\n                fill: value ? this.props.color : \"rgb(220,220,220)\",\n                transform:\n                  index + 1 === this.props.activeTrack\n                    ? \"scaleY(1.1)\"\n                    : \"scaleX(1)\",\n                strokeWidth: \"3px\",\n                margin: \"10px\",\n                transition: \"all 0.5s ease\"\n              }}\n              onClick={() =>\n                this.props.activateSound(index, this.props.trackNumber)\n              }\n            >\n              <rect width=\"100\" height=\"100\" />\n            </svg>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport play from \"../svg/play.svg\";\nimport stop from \"../svg/stop.svg\";\n\nexport default ({ activateSong, trackActive }) => {\n  return (\n    <div className=\"play-container\">\n      <button className=\"playButton\" onClick={activateSong}>\n        {trackActive ? (\n          <img className=\"play\" src={stop} alt=\"\" />\n        ) : (\n          <img className=\"play\" src={play} alt=\"play\" />\n        )}\n      </button>\n    </div>\n  );\n};\n","import React, { Component, Fragment } from \"react\";\n\nexport default class TrackSelect extends Component {\n  render() {\n    return (\n      <Fragment>\n        <select\n          className=\"track-select\"\n          onClick={e =>\n            this.props.selectTune(e.target.value, this.props.trackNumber)\n          }\n        >\n          {this.props.tone.map((tone, index) => (\n            <option value={tone} key={index}>\n              {this.props.toneName[index]}\n            </option>\n          ))}\n        </select>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Tone from \"tone\";\nimport Track from \"./Track\";\nimport Play from \"./Play\";\nimport TrackSelect from \"./TrackSelect\";\nimport kicktape from \"../sounds/kick-tape.wav\";\nimport kick808 from \"../sounds/kick-808.wav\";\nimport kickelectro from \"../sounds/kick-electro01.wav\";\nimport kickclassic from \"../sounds/kick-classic.wav\";\nimport claptape from \"../sounds/clap-tape.wav\";\nimport clapfat from \"../sounds/clap-fat.wav\";\nimport clapcrushed from \"../sounds/clap-crushed.wav\";\nimport clap808 from \"../sounds/clap-808.wav\";\nimport hihat808 from \"../sounds/hihat-808.wav\";\nimport hihatacoustic1 from \"../sounds/hihat-acoustic01.wav\";\nimport hihatelectro from \"../sounds/hihat-electro.wav\";\nimport guitarC4 from \"../samples/guitar-electric/C4.mp3\";\nimport pianoC4 from \"../samples/piano/C4.mp3\";\nimport celloC4 from \"../samples/cello/C4.mp3\";\n\nexport default class Sequencer extends Component {\n  state = {\n    bpm: 120,\n    timer: 0,\n    trackActive: false,\n    synthActive: true,\n    sounds: [\n      {\n        name: new Tone.Player(kicktape).toMaster(),\n        volume: 100,\n        mute: false,\n        values: [false, false, false, false, false, false, false, false],\n        id: \"102394\",\n        color: \"#EB5757\",\n        tones: [kicktape, kick808, kickelectro, kickclassic],\n        toneName: [\"Kick-Tape\", \"Kick-808\", \"Kick-Electro\", \"Kick-Classic\"]\n      },\n      {\n        name: new Tone.Player(claptape).toMaster(),\n        volume: 100,\n        mute: false,\n        values: [false, false, false, false, false, false, false, false],\n        id: \"10463\",\n        color: \"#6FCF97\",\n        tones: [claptape, clap808, clapfat, clapcrushed],\n        toneName: [\"Clap-Tape\", \"Clap-808\", \"Clap-Fat\", \"Clap-Crushed\"]\n      },\n      {\n        name: new Tone.Player(hihat808).toMaster(),\n        volume: 100,\n        mute: false,\n        values: [false, false, false, false, false, false, false, false],\n        id: \"345984\",\n        color: \"#BB6BD9\",\n        tones: [hihat808, hihatacoustic1, hihatelectro],\n        toneName: [\"Hihat-808\", \"Hihat-Acoustic\", \"Hihat-Electro\"]\n      }\n    ],\n    synth: {\n      name: new Tone.Sampler(\n        {\n          C4: pianoC4\n        },\n        { release: 4 }\n      ).toMaster(),\n      notes: {\n        A: \"C3\",\n        W: \"C#3\",\n        S: \"D3\",\n        E: \"D#3\",\n        D: \"E3\",\n        R: \"E#3\",\n        F: \"F3\",\n        T: \"F#3\",\n        G: \"G3\",\n        Y: \"G#3\",\n        H: \"A3\",\n        U: \"A#3\",\n        J: \"B3\",\n        I: \"B#3\",\n        Z: \"C4\",\n        X: \"D4\",\n        C: \"E4\",\n        V: \"F4\",\n        B: \"G4\",\n        N: \"A4\",\n        M: \"B4\"\n      },\n      synthSounds: [pianoC4, guitarC4, celloC4],\n      currentSynth: 0\n    }\n  };\n\n  activateSoundHandler = (sound, trackNumber) => {\n    const sounds = [...this.state.sounds];\n    sounds[trackNumber].values[sound] = !sounds[trackNumber].values[sound];\n    this.setState({\n      sounds: sounds\n    });\n  };\n\n  muteTrackHandler = trackNumber => {\n    const sounds = [...this.state.sounds];\n    sounds[trackNumber].mute = !sounds[trackNumber].mute;\n    this.setState({\n      sounds: sounds\n    });\n  };\n\n  changeBpmHandler = e => {\n    console.log(this.state.bpm);\n    this.setState({\n      bpm: e.target.value\n    });\n    Tone.Transport.bpm.value = this.state.bpm;\n  };\n\n  selectTuneHandler = (tune, trackNumber) => {\n    const sounds = [...this.state.sounds];\n    sounds[trackNumber].name = new Tone.Player(tune).toMaster();\n    this.setState({\n      sounds: sounds\n    });\n  };\n\n  activateSongHandler = () => {\n    //Start/Stop Sequence\n    if (!this.state.trackActive) {\n      Tone.Transport.start();\n    } else {\n      Tone.Transport.stop();\n    }\n\n    //Switch Play/Stop\n    this.setState({\n      trackActive: !this.state.trackActive\n    });\n  };\n\n  synthPlayHandler = e => {\n    const sound = this.state.synth.notes[e.key.toUpperCase()];\n    if (e.repeat) {\n      return;\n    } else {\n      this.state.synth.name.triggerAttack(sound);\n    }\n  };\n\n  releaseSynthHandler = () => {\n    this.state.synth.name.triggerRelease();\n  };\n\n  changeSynthHandler = () => {\n    const synth = { ...this.state.synth };\n    if (synth.currentSynth < synth.synthSounds.length - 1) {\n      synth.currentSynth++;\n    } else {\n      synth.currentSynth = 0;\n    }\n    synth.name = new Tone.Sampler(\n      {\n        C4: synth.synthSounds[synth.currentSynth]\n      },\n      { release: 4 }\n    ).toMaster();\n    this.setState({\n      synth: synth\n    });\n  };\n\n  componentDidMount() {\n    //Default BPM\n    Tone.Transport.bpm.value = this.state.bpm;\n    //Load Sequencer\n    Tone.Transport.scheduleRepeat(time => {\n      console.log(this.state.sounds[1].values);\n      console.log(this.state.timer);\n      this.state.sounds.forEach((sound, index) => {\n        if (\n          sound.values[this.state.timer] &&\n          !sound.mute &&\n          sound.name.loaded\n        ) {\n          sound.name.start();\n        }\n      });\n\n      //Start Visual Sequence\n      this.setState({\n        timer: (this.state.timer + 1) % 8\n      });\n    }, \"8n\");\n  }\n\n  render() {\n    const { sounds } = this.state;\n\n    return (\n      <div\n        onKeyDown={this.synthPlayHandler}\n        onKeyUp={this.releaseSynthHandler}\n        tabIndex=\"0\"\n        style={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}\n      >\n        <h1 className=\"main-title\">Tap Music</h1>\n        {sounds.map((sound, index) => (\n          <div key={sound.id} className=\"full-track\">\n            <Track\n              values={sound.values}\n              activateSound={this.activateSoundHandler}\n              trackNumber={index}\n              activeTrack={this.state.timer}\n              color={sound.color}\n              mute={sound.mute}\n              muteHandler={this.muteTrackHandler}\n            />\n            <TrackSelect\n              tone={sound.tones}\n              selectTune={this.selectTuneHandler}\n              trackNumber={index}\n              toneName={sound.toneName}\n            />\n          </div>\n        ))}\n        <div className=\"dashboard\">\n          <div className=\"drums\">\n            <p onClick={this.changeSynthHandler}>Drums</p>\n          </div>\n          <Play\n            activateSong={this.activateSongHandler}\n            trackActive={this.state.trackActive}\n          />\n          <div className=\"tempo\">\n            <p>Tempo</p>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"140\"\n              value={this.state.bpm}\n              onChange={this.changeBpmHandler}\n              onClick={e => e.preventDefault()}\n            />\n            <p>{this.state.bpm}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Sequencer from \"./components/Sequencer\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Sequencer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}